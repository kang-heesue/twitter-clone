{"version":3,"sources":["components/Nav.js","fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Nav","userData","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","editTweet","setEditTweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","uploadURL","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","TweetFactory","tweet","setTweet","imageFile","setImageFile","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","dbTweets","query","orderBy","onSnapshot","snapshot","tweetArr","docs","map","data","Profile","refreshUser","history","useHistory","newName","setNewName","updateProfile","currentUser","signOut","push","Router","isSignIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserData","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b449a15.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav({ userData }) {\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userData.displayName\n                ? `${userData.displayName}Ïùò Profile`\n                : 'Profile'}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\n\nfunction AuthForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState('');\n\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (newAccount) {\n        await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        await signInWithEmailAndPassword(authService, email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form className=\"container\" onSubmit={onSubmit}>\n        <input\n          className=\"authInput\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          className=\"authInput\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? 'Create Account' : 'Sign In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span className=\"authSwitch\" onClick={toggleAccount}>\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n}\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService } from 'fbase';\nimport {\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from 'firebase/auth';\nimport AuthForm from 'components/AuthForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nfunction Auth() {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === 'google') {\n      provider = new GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new GithubAuthProvider();\n    }\n    await signInWithPopup(authService, provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button className=\"authBtn\" name=\"google\" onClick={onSocialClick}>\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button className=\"authBtn\" name=\"github\" onClick={onSocialClick}>\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { ref, deleteObject } from 'firebase/storage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nfunction Tweet({ tweetObj, isOwner }) {\n  const [editing, setEditing] = useState(false);\n  const [editTweet, setEditTweet] = useState(tweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this tweet?');\n    if (ok) {\n      await deleteDoc(doc(dbService, `tweets/${tweetObj.id}`));\n      await deleteObject(ref(storageService, tweetObj.uploadURL));\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await updateDoc(doc(dbService, `tweets/${tweetObj.id}`), {\n      text: editTweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setEditTweet(value);\n  };\n\n  return (\n    <div className=\"tweet\">\n      {editing ? (\n        <>\n          <form className=\"container tweetEdit\" onSubmit={onSubmit}>\n            <input\n              className=\"formInput\"\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={editTweet}\n              onChange={onChange}\n              autoFocus\n              required\n            />\n            <input className=\"formBtn\" type=\"submit\" value=\"Update tweet\" />\n          </form>\n          <span className=\"formBtn cancelBtn\" onClick={toggleEditing}>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.uploadURL && (\n            <img src={tweetObj.uploadURL} alt=\"uploadImage\" />\n          )}\n          {isOwner && (\n            <div className=\"tweet_actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Tweet;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { dbService, storageService } from 'fbase';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nfunction TweetFactory({ userData }) {\n  const [tweet, setTweet] = useState('');\n  const [imageFile, setImageFile] = useState('');\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (tweet === '') {\n      return;\n    }\n    let uploadURL = '';\n    if (imageFile !== '') {\n      const fileRef = ref(storageService, `${userData.uid}/${uuidv4()}`);\n      const uploadFile = await uploadString(fileRef, imageFile, 'data_url');\n      uploadURL = await getDownloadURL(uploadFile.ref);\n    }\n    await addDoc(collection(dbService, 'tweets'), {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userData.uid,\n      uploadURL,\n    });\n    setTweet('');\n    setImageFile('');\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setTweet(value);\n  };\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setImageFile(result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const onClearImageFile = () => setImageFile('');\n\n  return (\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\n      <div className=\"factoryInput_container\">\n        <input\n          className=\"factoryInput_input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's happening?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput_arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput_label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {imageFile && (\n        <div className=\"factoryForm_image\">\n          <img\n            src={imageFile}\n            alt=\"imageFile\"\n            style={{\n              backgroundImage: imageFile,\n            }}\n          />\n          <div className=\"factoryForm_clear\" onClick={onClearImageFile}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default TweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport { query, collection, onSnapshot, orderBy } from 'firebase/firestore';\nimport Tweet from 'components/Tweet';\nimport TweetFactory from 'components/TweetFactory';\n\nfunction Home({ userData }) {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    const dbTweets = query(\n      collection(dbService, 'tweets'),\n      orderBy('createdAt', 'desc'),\n    );\n    onSnapshot(dbTweets, (snapshot) => {\n      const tweetArr = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(tweetArr);\n    });\n  }, []);\n\n  return (\n    <div className=\"container router\">\n      <TweetFactory userData={userData} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userData.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { authService } from 'fbase';\nimport { updateProfile } from 'firebase/auth';\n\nfunction Profile({ userData, refreshUser }) {\n  const history = useHistory();\n  const [newName, setNewName] = useState(userData.displayName);\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userData.displayName !== newName) {\n      await updateProfile(authService.currentUser, {\n        displayName: newName,\n      });\n      refreshUser();\n    }\n  };\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  return (\n    <div className=\"container router\">\n      <form className=\"profileForm\" onSubmit={onSubmit}>\n        <input\n          className=\"formInput\"\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newName}\n          onChange={onChange}\n          autoFocus\n        />\n        <input\n          className=\"formBtn\"\n          type=\"submit\"\n          value=\"Update Profile\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logout\" onClick={onLogoutClick}>\n        Logout\n      </span>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Nav from 'components/Nav';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\n\nfunction Router({ isSignIn, userData, refreshUser }) {\n  return (\n    <HashRouter>\n      {isSignIn && <Nav userData={userData} />}\n      <Switch>\n        {!isSignIn ? (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        ) : (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: '100%',\n                margin: '0 auto',\n                marginTop: 80,\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userData={userData} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userData={userData} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        )}\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default Router;\n","import React, { useEffect, useState } from 'react';\nimport Router from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userData, setUserData] = useState(null);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserData({\n      displayName: user.displayName,\n      uid: user.uid,\n    });\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserData({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      } else {\n        setUserData(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <Router\n          isSignIn={Boolean(userData)}\n          userData={userData}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        'Initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}